<?xml version="1.0" encoding="UTF-8"?>

<beans  
    xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/jdbc 
	http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd">

   	
  
   <!-- enable component scanning (beware that this does not enable mapper   scanning!) -->  
   <context:component-scan base-package="com.ycbick.*" />
	
    <!-- enable autowire -->  
    <context:annotation-config />  
  
    <!-- enable transaction demarcation with annotations -->  
    <tx:annotation-driven />  
    
    <!-- 数据库配置文件位置 
    <context:property-placeholder location="classpath:/database.properties" />  
    -->  
    
    <!-- 配置文件读取类-->
   	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		 <property name="location" value="classpath:database.properties" />
 	</bean>
 	  
   	 <!-- 配置数据源  -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
    </bean>
    
    <!-- 配置会话工厂类 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis.xml" />
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:com/ycbike/web/domain/*.xml" />
    </bean>
    <!-- 配置SQLSession模板 -->  
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean>  
    
    <!-- 配置事务类 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" /> 
	
	<!-- 配置传统的传播性事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager" >
	    <tx:attributes>
			<tx:method name="find*" read-only="true"/>	        
	        <tx:method name="get*" read-only="true"/>
	        <tx:method name="query*" read-only="true"/>
	        <tx:method name="select*" read-only="true"/>
	        <tx:method name="add*" propagation="REQUIRED"/>
	        <tx:method name="insert*" propagation="REQUIRED"/>
	        <tx:method name="update*" propagation="REQUIRED"/>
	        <tx:method name="delete*" propagation="REQUIRED"/>
	    </tx:attributes>
	</tx:advice>
	<!-- 配置AOP -->
	<aop:config>
	    <!-- 配置切点 -->
	    <aop:pointcut expression="execution(* com.ycbike.web..*.*(..))" id="pointcut"/>
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
	</aop:config>
	
	    
    <!-- 以上是全局文件的配置部分。 -->
    
    <!-- 引入插件解析器的配置文件 -->
    <import resource="spring-plugin-Resolver.xml"/>
    <!-- 引入项目的配置文件 -->
    <import resource="spring-project.xml"/>
    
    
</beans>